name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: Check for 75%+ coverage
        run: |
          COVERAGE=$(npx jest --coverage --coverageReporters=text-summary | grep "All files" | awk '{print $3}' | sed 's/%//')
          if (( $(echo "$COVERAGE < 75" | bc -l) )); then
            echo "❌ Coverage below 75% ($COVERAGE%)"
            exit 1
          else
            echo "✅ Coverage is $COVERAGE%"
          fi

      - name: Build project
        run: npm run build

  release:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Zip build directory
        run: zip -r build.zip build

      - name: Bump version and create tag
        id: version
        uses: phips28/gh-action-bump-version@master
        with:
          tag-prefix: 'v'
          major-wording: 'MAJOR'
          minor-wording: 'minor'
          patch-wording: 'patch,fix'
          commit-message: 'CI: bump version to {{version}} [skip ci]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.newTag }}
          name: Release ${{ steps.version.outputs.newTag }}
          files: build.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
